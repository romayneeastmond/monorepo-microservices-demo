# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - none

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: "9e76791c-a634-4b59-b379-8219e99036d0"
  containerRegistry: "devcontainerregistryre02.azurecr.io"
  tag: "latest"
  imagePullSecret: "devcontainerregistryre022029812b-auth"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Upload
    displayName: Upload Stage
    jobs:
      - job: upload_manifests
        displayName: Upload Manifests
        pool:
          vmImage: $(vmImageName)
        steps:
          - upload: "**/.azuredevops/pipelines/manifests"
            artifact: manifests

  - stage: Build
    displayName: Build Stage
    jobs:
      - job: build_company_course
        displayName: Build Company.Course
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and Push Company.Course to Registry
            inputs:
              command: buildAndPush
              repository: "company-course"
              dockerfile: "**/Company.Course/Company.Course.Api/Dockerfile"
              buildContext: .
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)

  - stage: Deploy
    displayName: Deploy Stage
    dependsOn: Build

    jobs:
      - deployment: deploy_company_course
        displayName: Deploy Company.Course
        pool:
          vmImage: $(vmImageName)
        environment: "dev-kubernetes-cluster-re02.default"
        strategy:
          runOnce:
            deploy:
              steps:
                - task: KubernetesManifest@0
                  displayName: Create imagePullSecret
                  inputs:
                    action: createSecret
                    secretName: $(imagePullSecret)
                    dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

                - task: KubernetesManifest@0
                  displayName: Deploy Company.Course to Kubernetes Cluster
                  inputs:
                    action: deploy
                    manifests: |
                      $(Pipeline.Workspace)/manifests/deployment-course-company.yml
                    imagePullSecrets: |
                      $(imagePullSecret)
                    containers: |
                      $(containerRegistry)/company-course:$(tag)
