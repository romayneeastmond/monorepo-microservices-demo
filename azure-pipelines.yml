# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - none

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: "9e76791c-a634-4b59-b379-8219e99036d0"
  containerRegistry: "devcontainerregistryre02.azurecr.io"
  tag: "latest"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build Stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and Push Company.Course to Registry
            inputs:
              command: buildAndPush
              repository: "company-course"
              dockerfile: "**/Company.Course/Company.Course.Api/Dockerfile"
              buildContext: .
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)

  - stage: Build
    displayName: Build Stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and Push Company.Department to Registry
            inputs:
              command: buildAndPush
              repository: "company-department"
              dockerfile: "**/Company.Department/Company.Department.Api/Dockerfile"
              buildContext: .
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)

  - stage: Build
    displayName: Build Stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and Push Company.Employee to Registry
            inputs:
              command: buildAndPush
              repository: "company-employee"
              dockerfile: "**/Company.Employee/Company.Employee.Api/Dockerfile"
              buildContext: .
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)

  - stage: Build
    displayName: Build Stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and Push Company.Notification to Registry
            inputs:
              command: buildAndPush
              repository: "company-notification"
              dockerfile: "**/Company.Notification/Company.Notification.Api/Dockerfile"
              buildContext: .
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)

  - stage: Build
    displayName: Build Stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and Push Microservices.Catalogue to Registry
            inputs:
              command: buildAndPush
              repository: "microservices-catalogue"
              dockerfile: "**/Microservices.Catalogue/Dockerfile"
              buildContext: .
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
