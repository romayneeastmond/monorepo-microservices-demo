name: Build and Publish Microservices to Web Apps

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME_1: "dev-aspnet-company-course-re01"
  AZURE_WEBAPP_NAME_2: "dev-aspnet-company-department-re01"
  AZURE_WEBAPP_NAME_3: "dev-aspnet-company-employee-re01"
  AZURE_WEBAPP_NAME_4: "dev-aspnet-company-notification-re01"
  AZURE_WEBAPP_NAME_5: "dev-nodejs-microservices-catalogue-re01"
  AZURE_WEBAPP_NAME_6: "dev-nodejs-microservices-graphql-re01"
  AZURE_WEBAPP_PACKAGE_PATH: "."
  NODE_VERSION: "14.x"

jobs:
  build_microservice_course:
    runs-on: ubuntu-latest
    defaults:
          run:
            working-directory: ./Company.Course
            
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build and Publish
      run: |
        dotnet build --no-restore
        dotnet publish -c Release -o ./dotnetframework-webapp -r win-x86 --self-contained true /p:UseAppHost=true
      
    - name: Test
      run: dotnet test --no-build --verbosity normal 

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
            name: dotnetframework-webapp-1
            path: ./Company.Course/dotnetframework-webapp 
      
  build_microservice_department:
    runs-on: ubuntu-latest
    defaults:
          run:
            working-directory: ./Company.Department
            
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build and Publish
      run: |
        dotnet build --no-restore
        dotnet publish -c Release -o ./dotnetframework-webapp -r win-x86 --self-contained true /p:UseAppHost=true
      
    - name: Test
      run: dotnet test --no-build --verbosity normal 

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
            name: dotnetframework-webapp-2
            path: ./Company.Department/dotnetframework-webapp      
      
  build_microservice_employee:
    runs-on: ubuntu-latest
    defaults:
          run:
            working-directory: ./Company.Employee
            
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build and Publish
      run: |
        dotnet build --no-restore
        dotnet publish -c Release -o ./dotnetframework-webapp -r win-x86 --self-contained true /p:UseAppHost=true
      
    - name: Test
      run: dotnet test --no-build --verbosity normal 

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
            name: dotnetframework-webapp-3
            path: ./Company.Employee/dotnetframework-webapp       

  build_microservice_notification:
    runs-on: ubuntu-latest
    defaults:
          run:
            working-directory: ./Company.Notification
            
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build and Publish
      run: |
        dotnet build --no-restore
        dotnet publish -c Release -o ./dotnetframework-webapp -r win-x86 --self-contained true /p:UseAppHost=true
      
    - name: Test
      run: dotnet test --no-build --verbosity normal 

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
            name: dotnetframework-webapp-4
            path: ./Company.Notification/dotnetframework-webapp      
      
  build_catalogue_react:
    runs-on: ubuntu-latest
    needs: [build_microservice_course, build_microservice_department, build_microservice_employee, build_microservice_notification]
    defaults:
          run:
            working-directory: ./Microservices.Catalogue
            
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: npm install and build
        run: |
          npm install
          npm run build --if-present       
        env:
          CI: false

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: node-app-1
          path: ./Microservices.Catalogue/build          
  
  build_graphql_express:
    runs-on: windows-latest
    needs: [build_microservice_course, build_microservice_department, build_microservice_employee, build_microservice_notification]
    defaults:
          run:
            working-directory: ./Microservices.GraphQL
            
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: npm install and build
        run: |
          npm install
          npm run build --if-present       
        env:
          CI: false

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: node-app-2
          path: ./Microservices.GraphQL

  update_packages_version:
    runs-on: ubuntu-latest
    needs: [build_catalogue_react, build_graphql_express]

    steps:
      - uses: actions/checkout@v2
      - name: Bot Configuration
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Standard Version 
        run: |
          npx standard-version
          git push --follow-tags origin HEAD:main 

  deploy_microservice_course:
    runs-on: ubuntu-latest
    needs: [build_catalogue_react, build_graphql_express, update_packages_version]

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: dotnetframework-webapp-1

      - name: "Deploy to dev-aspnet-company-course-re01"
        id: deploy-to-webapp-1
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_1 }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_COMPANY_COURSE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy_microservice_department:
    runs-on: ubuntu-latest
    needs: [build_catalogue_react, build_graphql_express, update_packages_version]

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: dotnetframework-webapp-2

      - name: "Deploy to dev-aspnet-company-department-re01"
        id: deploy-to-webapp-2
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_2 }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_COMPANY_DEPARTMENT }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy_microservice_employee:
    runs-on: ubuntu-latest
    needs: [build_catalogue_react, build_graphql_express, update_packages_version]

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: dotnetframework-webapp-3

      - name: "Deploy to dev-aspnet-company-employee-re01"
        id: deploy-to-webapp-3
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_3 }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_COMPANY_EMPLOYEE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy_microservice_notification:
    runs-on: ubuntu-latest
    needs: [build_catalogue_react, build_graphql_express, update_packages_version]

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: dotnetframework-webapp-4

      - name: "Deploy to dev-aspnet-company-notification-re01"
        id: deploy-to-webapp-4
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_4 }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_COMPANY_NOTIFICATION }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}                    

  deploy_catalogue_react:
    runs-on: ubuntu-latest
    needs: [build_catalogue_react, update_packages_version]

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app-1

      - name: "Deploy to dev-nodejs-microservices-catalogue-re01"
        id: deploy-to-webapp-5
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_5 }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_MICROSERVICES_CATALOGUE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}         

  deploy_graphql_express:
    runs-on: ubuntu-latest
    needs: [build_graphql_express, update_packages_version]

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app-2

      - name: "Deploy to dev-nodejs-microservices-graphql-re01"
        id: deploy-to-webapp-6
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_6 }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_MICROSERVICES_GRAPHQL }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}           
